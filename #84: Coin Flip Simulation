"""
Create a program that uses Pythonâ€™s random number generator to simulate flipping a coin several times. 
The simulated coin should be fair, meaning that the probability of heads is equal to the probability of tails. 
Your program should flip simulated coins until either 3 consecutive heads of 3 consecutive tails occur. Display an 
H each time the outcome is heads, and a T each time the outcome is tails, with all of the outcomes for one simulation 
on the same line. Then display the number of flips that were needed to reach 3 consecutive occurrences of the same 
outcome. When your program is run it should perform the simulation 10 times and report the average
number of flips needed.
"""

coin = ["H","T"]          #Initializing the "coin"
flips_list = []           #Initializing the list of flips needed, for each simulation, before three consecutive heads or tails are reached.

for simulation in range(0,10):            #10 simulations
    consecutive = 0         #Initialize consecutive to 0
    flip = random.choice(coin)         
    last_flip = flip              #we randomly flip the coin and initialize flip to last flip, so that the next flip refers to this one as the "last" one.
    flips = 0      
    while consecutive < 3:      #continues to flip the coin until we have three consecutives Hs or Ts
        flip = random.choice(coin)
        if flip == last_flip:         #if the flip is equal to the previous one, we add one to consecutive, and to the num of flips.
            consecutive += 1
            flips +=1
            print(flip, end = " ")
        elif flip != last_flip:       #if the flip is NOT equal to the previous one, we reset consecutive to 1, setting flip to the last flip.
            consecutive = 1
            last_flip = flip
            flips +=1
            print(flip, end = " ")
    print(f"({flips} flips)") #prints the number of flips before reaching consecutive Hs or Ts.
    flips_list.append(flips)
print(f"\nOn average, {sum(flips_list)/len(flips_list)} flips were needed.")
