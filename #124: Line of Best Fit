"""A line of best fit is a straight line that best approximates a collection of n data points. In this exercise, we will assume that each point in 
the collection has an x coordinate and a y coordinate. The symbols x¯ and y¯ are used to represent the average x value in the collection and the 
average y value in the collection respectively. The line of best fit is represented by the equation y = mx + b. Write a program that reads a collection 
of points from the user. The user will enter the x part of the first coordinate on its own line, followed by the y part of the first coordinate on its 
own line. Allow the user to continue entering coordinates, with the x and y parts each entered on their own line, until your program reads a blank line 
for the x coordinate. Display the formula for the line of best fit in the form y = mx + b by replacing m and b with the values you calculated using the 
preceding formulas. For example, if the user inputs the coordinates (1, 1), (2, 2.1) and (3, 2.9) then your program should display y = 0.95x + 01. """

x_coord = float(input("Enter the first x-coordinate: "))
y_coord = float(input("Enter the first y-coordinate: "))
x_coords = [x_coord]
y_coords = [y_coord]

while x_coord != " ":
    x_coord = input("Enter the next x-coordinate (blank to quit): ")
    if x_coord != " ":
        x_coords.append(float(x_coord))
        y_coord = float(input("Enter the next y-coordinate: "))
        y_coords.append(y_coord)
    else:
        break

def slope(x_coords,y_coords):
    coordinates = list(zip(x_coords,y_coords))
    numerator = sum([x * y for x,y in coordinates]) - ((sum(x_coords)*sum(y_coords)) / len(coordinates))
    denominator = sum([x**2 for x in x_coords]) - ((sum(x_coords)**2)/len(coordinates))
    return round(numerator/denominator,2)

def y_intercept(x_coords,y_coords):
    return round((sum(y_coords)/len(y_coords)) - (slope(x_coords,y_coords) * (sum(x_coords)/len(x_coords))),2)

if y_intercept(x_coords,y_coords) >= 0:
    print(f"The line of best fit is: y = {slope(x_coords,y_coords)}x + {y_intercept(x_coords,y_coords)}")
else:
    print(f"The line of best fit is: y = {slope(x_coords,y_coords)}x {y_intercept(x_coords,y_coords)}")
