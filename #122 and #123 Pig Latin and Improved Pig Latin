#Exercise #122: Pig Latin

def pig_latin(string):
    new_string = ""
    for word in string.split(" "):
        term = ""
        start = ""
        if word[0] in "aeiou":
            term += word + "way" 
            new_string += term + " "
        elif word[0] in "bcdfghjklmnpqrstvwxyz":
            for letter in word:
                if letter not in "aeiou":
                    start += letter
                else:
                    break
            term = word[word.index(letter): ] + start + "ay"
            new_string += term + " "
        else:
            new_string += word + " "
    return new_string       


#Exercise #123: Improved Pig Latin
def pig_latin_improved(string):
    new_string = ""
    for word in string.split(" "):
        term = ""
        start = ""
        middle = ""
        end = ""
        punctuation = ""
        if word[0] in "aeiou":
            for letter in word:
                if letter.isalpha():
                    term += letter
                else:
                    punctuation += letter           
            new_string += term + "way" + punctuation + " "
        
        elif word[0].lower() in "bcdfghjklmnpqrstvwxyz":    
            for letter in word:
                if letter.lower() in "bcdfghjklmnpqrstvwxyz" and end == "":
                    start += letter.lower()
                elif letter in "bcdfghjklmnpqrstvwxyz" and end != "":
                    middle += letter.lower()
                elif letter in ",.?-!:;'":
                    punctuation += letter
                elif letter in "aeiou" and middle == "":
                    end += letter.lower()
                elif letter in "aeiou" and middle != "":
                    middle += letter.lower()
            
            if word[0].isupper() == True:
                term = end[0].upper() + end[1:].lower() + middle + start + "ay" + punctuation
            else:
                term = end.lower() + middle + start + "ay" + punctuation
            new_string += term + " "
        else:
            new_string += word + " "
    return new_string       
