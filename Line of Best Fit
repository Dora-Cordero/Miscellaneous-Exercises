"""A line of best fit is a straight line that best approximates a collection of n data points.
In this exercise, we will assume that each point in the collection has an x coordinate
and a y coordinate. The symbols x¯ and y¯ are used to represent the average x value in 
the collection and the average y value in the collection respectively. The line of best
fit is represented by the equation y = mx + b.
Write a program that reads a collection of points from the user. The user will enter
the x part of the first coordinate on its own line, followed by the y part of the first
coordinate on its own line. Allow the user to continue entering coordinates, with the
x and y parts each entered on their own line, until your program reads a blank line for
the x coordinate. Display the formula for the line of best fit in the form y = mx + b
by replacing m and b with the values you calculated using the preceding formulas.
For example, if the user inputs the coordinates (1, 1), (2, 2.1) and (3, 2.9) then your
program should display y = 0.95x + 01. """

import math

x_values = []
y_values = []
x = input("Please input an x-coordinate: ")
x = float(x)
x_values.append(x)
y = input("Please input a y-coordinate: ")
y = float(y)
y_values.append(y)

while x != " ":
        x = input("Please input an x-coordinate (blank to quit): ")
        if x != " ":
            x = float(x)
            x_values.append(x)
            y = input("Please input a y-coordinate: ")
            y = float(y)
            y_values.append(y)

def slope(x_values,y_values):
    sum_xy = []
    for i in range(0,len(x_values)):
        z = x_values[i] * y_values[i]
        sum_xy.append(z)

    sum_xy = math.fsum(sum_xy)
    numerator = sum_xy - ((math.fsum(x_values) * math.fsum(y_values))/len(x_values))
    x_values_squared = []
    for x in x_values:
        x = x**2
        x_values_squared.append(x)
    denominator = math.fsum(x_values_squared) - ((math.fsum(x_values)**2)/len(x_values))
    m = round(numerator / denominator,2)
    return m

def line_of_best_fit(m,x_values,y_values):
    average_y = round(math.fsum(y_values)/len(y_values),2)
    average_x = round(math.fsum(x_values)/len(x_values),2)
    b = round(average_y - ((slope(x_values,y_values)) * average_x),2)
    line = f"y = {slope(x_values,y_values)}x + {b}"
    return line

print(line_of_best_fit(m,x_values,y_values))
        
